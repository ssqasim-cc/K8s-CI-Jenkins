<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>io.digital.supercharger</groupId>
	<artifactId>template-microservice</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Template Microservice</name>
	<description>Java spring template application</description>

	<properties>
        <service.main.class>io.digital.supercharger.MicroserviceApplication</service.main.class>
        <java.version>11</java.version>
        <springfox-swagger.version>2.9.2</springfox-swagger.version>
        <!-- automatically run annotation processors within the incremental compilation -->
        <m2e.apt.activation>jdt_apt</m2e.apt.activation>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spotbugs-maven.version>3.1.11</spotbugs-maven.version>
        <maven.compiler.version>3.8.0</maven.compiler.version>
        <mockito.version>2.27.0</mockito.version>
        <checkstyle.file.path>checkstyle.xml</checkstyle.file.path>
        <checkstyle.latest.version>8.19</checkstyle.latest.version>
        <jmockit.version>1.41</jmockit.version>
        <jacoco.version>0.8.3</jacoco.version>
        <jacoco.dependency.version>3.8</jacoco.dependency.version>
        <pmdVersion>6.12.0</pmdVersion>
        <integration.test.category>io.digital.supercharger.common.test.category.IntegrationTest
        </integration.test.category>
        <dockerfile-maven-version>1.4.10</dockerfile-maven-version>
        <maven.checkstyle.version>3.0.0</maven.checkstyle.version>
        <jackson.version>2.10.3</jackson.version>
        <jackson.databind.version>2.10.3</jackson.databind.version>
        <mapstruct.version>1.3.0.Final</mapstruct.version>
        <awaitility.version>4.0.2</awaitility.version>
        <maven-pmd-plugin>3.11.0</maven-pmd-plugin>
        <apache.commons.version>3.8.1</apache.commons.version>
	</properties>

	<dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-annotations</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Add Log4j2 Dependency -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-annotations</artifactId>
                </exclusion>
            </exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
		</dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${apache.commons.version}</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.databind.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <!-- swagger -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox-swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox-swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-bean-validators</artifactId>
			<version>${springfox-swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
			<groupId>org.sonarsource.java</groupId>
			<artifactId>sonar-jacoco-listeners</artifactId>
			<version>${jacoco.dependency.version}</version>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>
	</dependencies>

	<build>
		<plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- Spotify recommends all project dependencies are copied into
                a separate folder in the projectâ€™s target directory This approach allows
                to cache individual dependencies in the docker image @see: https://aerben.me/2017/docker-maven-1/
                https://spring.io/guides/gs/spring-boot-docker/ -->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>${service.main.class}</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<overWriteReleases>false</overWriteReleases>
							<includeScope>runtime</includeScope>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
            <plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>

				<configuration>
					<!-- If you'd like to tell the plugin where your .git
                        directory is, use this setting, otherwise we'll perform a search trying to
                        figure out the right directory. It's better to add it explicitly IMHO. -->
					<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
					<verbose>false</verbose>
					<!-- @since 2.1.4 -->
					<!-- Tell maven-git-commit-id to inject the git properties
                        into all reactor projects not just the current one. For details about why
                        you might want to skip this, read this issue: https://github.com/ktoso/maven-git-commit-id-plugin/pull/65
                        The property is set to ``false`` by default to prevent the overriding of
                        properties that may be unrelated to the project. -->
					<injectAllReactorProjects>true</injectAllReactorProjects>

					<!-- @since 2.0.4 -->
					<!-- true by default, controls whether the plugin will
                        fail when no .git directory is found, when set to false the plugin will just
                        skip execution -->
					<failOnNoGitDirectory>false</failOnNoGitDirectory>

					<!-- @since v2.0.4 -->
					<!-- Controls the length of the abbreviated git commit
                        it (git.commit.id.abbrev) Defaults to `7`. `0` carries the special meaning.
                        Maximum value is `40`, because of max SHA-1 length. -->
					<abbrevLength>7</abbrevLength>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven.checkstyle.version}</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>${checkstyle.latest.version}</version>
					</dependency>
				</dependencies>
				<configuration>
                    <sourceDirectories>
                        <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                    </sourceDirectories>
					<!-- Use the Sun Conding Conventions https://github.com/checkstyle/checkstyle/blob/master/src/main/resources/sun_checks.xml -->
					<configLocation>${checkstyle.file.path}</configLocation>
					<consoleOutput>true</consoleOutput>
					<failOnViolation>true</failOnViolation>
					<violationSeverity>warning</violationSeverity>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs-maven.version}</version>
                <configuration>
                    <excludeFilterFile>spotbugs-exclude-false-positive.xml</excludeFilterFile>
                </configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin}</version>
				<configuration>
                    <linkXRef>false</linkXRef>
					<sourceEncoding>utf-8</sourceEncoding>
					<minimumTokens>100</minimumTokens>
					<targetJdk>${java.version}</targetJdk>
					<failOnViolation>true</failOnViolation>
                    <!-- <excludes> <exclude>**/*Bean.java</exclude> <exclude>**/generated/*.java</exclude>
                        </excludes> <excludeRoots> <excludeRoot>target/generated-sources/stubs</excludeRoot>
                        </excludeRoots> -->
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>net.sourceforge.pmd</groupId>
						<artifactId>pmd-core</artifactId>
						<version>${pmdVersion}</version>
					</dependency>
					<dependency>
						<groupId>net.sourceforge.pmd</groupId>
						<artifactId>pmd-java</artifactId>
						<version>${pmdVersion}</version>
					</dependency>
					<dependency>
						<groupId>net.sourceforge.pmd</groupId>
						<artifactId>pmd-javascript</artifactId>
						<version>${pmdVersion}</version>
					</dependency>
					<dependency>
						<groupId>net.sourceforge.pmd</groupId>
						<artifactId>pmd-jsp</artifactId>
						<version>${pmdVersion}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- <excludes> <exclude>**/*IntegrationTest</exclude>
                        </excludes> -->
					<excludedGroups>${integration.test.category}</excludedGroups>
					<!-- Sets the VM argument line used when unit tests are
                        run. -->
					<!--suppress UnresolvedMavenProperty -->
					<argLine>${surefireArgLine}</argLine>
					<!-- skips surefire tests without skipping failsafe tests.
                        Property value seems to magically default to false -->
					<!--suppress UnresolvedMavenProperty -->
					<skipTests>${skip.surefire.tests}</skipTests>
					<!-- Specific to generate mapping between tests and covered
                        code -->
					<properties>
						<property>
							<name>listener</name>
							<value>org.sonar.java.jacoco.JUnitListener</value>
						</property>
					</properties>
				</configuration>
			</plugin>
			<!-- https://www.baeldung.com/maven-integration-test -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<!--suppress UnresolvedMavenProperty -->
					<argLine>-Xmx1024m -XX:MaxPermSize=256m
						${surefireArgLine}
					</argLine>
					<includes>
						<include>**/*</include>
					</includes>
					<groups>${integration.test.category}</groups>
					<!-- Specific to generate mapping between tests and covered
                        code -->
					<properties>
						<property>
							<name>listener</name>
							<value>org.sonar.java.jacoco.JUnitListener</value>
						</property>
					</properties>
					<!-- Let's put failsafe reports with surefire to have
                        access to tests failures/success reports in sonar -->
					<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- exclude domain objects -->
							<!-- <excludes> <exclude>com/acme/api/*Api.class</exclude>
                                <exclude>com/acme/generated/**/*</exclude> </excludes> -->
							<!-- Sets the path to the file which contains
                                the execution data. -->
							<destFile>${project.build.directory}/jacoco.exec</destFile>
							<!-- Sets the name of the property containing
                                the settings for JaCoCo runtime agent. -->
							<propertyName>surefireArgLine</propertyName>
							<append>true</append>
						</configuration>
					</execution>
					<execution>
						<id>default-report</id>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>COMPLEXITY</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.10</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
